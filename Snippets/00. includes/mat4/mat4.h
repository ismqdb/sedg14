/* ******************************************************************************** */

#pragma once

/* ******************************************************************************** */

#ifndef M_PI
    #define M_PI 3.14159265358979323846
#endif

/* ******************************************************************************** */

#include "../standardTypes.h"
#include "../vec4/vec4.h"
#include "../array/array.h"

/* ******************************************************************************** */

#include <assert.h>
#include <math.h>

/* ******************************************************************************** */

struct mat4 {
    f32 field[4][4];
};

/* ******************************************************************************** */

struct mat4 zeroMat4();
struct mat4 oneMat4();

/* ******************************************************************************** */

struct mat4 identityMat4();

/* ******************************************************************************** */

struct mat4 addMat4(struct mat4, struct mat4);
struct mat4 mulMat4(struct mat4, struct mat4);

/* ******************************************************************************** */

struct mat4 translateMat4(struct mat4, struct vec4);
struct mat4 scaleMat4(struct mat4, f32);

/* ******************************************************************************** */

struct mat4 xreflectMat4(struct mat4);
struct mat4 yreflectMat4(struct mat4);

/* ******************************************************************************** */

struct mat4 xrotateMat4(struct mat4, f32);
struct mat4 yrotateMat4(struct mat4, f32);
struct mat4 zrotateMat4(struct mat4, f32);

/* ******************************************************************************** */